import { RespV2 } from "@dendronhq/common-all";
export interface TokenMethods {
    getToken: (opts: GetTokenOpts) => Promise<RespV2<any> | GetTokenPayload>;
    refreshToken: (opts: RefreshTokenOpts) => Promise<RespV2<string>>;
}
declare type GetTokenPayload = string | undefined;
/**
 * clientId and secret is added as optional parameters
 */
declare type GetTokenOpts = {
    code: string;
    connectionId: string;
};
declare type RefreshTokenOpts = {
    refreshToken: string;
    connectionId: string;
};
export declare class GoogleAuthController implements TokenMethods {
    clientId: string;
    clientSecret: string;
    constructor(clientId: string, clientSecret: string);
    getToken(opts: GetTokenOpts): Promise<RespV2<any> | GetTokenPayload>;
    refreshToken(opts: RefreshTokenOpts): Promise<RespV2<string>>;
    private addAccessTokensToPodConfig;
}
export {};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enableForeignKeys = exports.getSQLBoolean = exports.getSQLValueString = exports.getJSONString = exports.getIntegerString = void 0;
function getIntegerString(value) {
    if (value) {
        return `${value.toString()}`;
    }
    return "null";
}
exports.getIntegerString = getIntegerString;
function getJSONString(value) {
    if (value) {
        return `'${JSON.stringify(value).replace(/'/g, "''")}'`;
    }
    return "null";
}
exports.getJSONString = getJSONString;
function getSQLValueString(value) {
    if (value) {
        return `'${value.replace(/'/g, "''")}'`; // Single quotes need to be escaped in SQLite
    }
    return "null";
}
exports.getSQLValueString = getSQLValueString;
function getSQLBoolean(value) {
    return value ? "1" : "0";
}
exports.getSQLBoolean = getSQLBoolean;
async function enableForeignKeys(db) {
    await new Promise((resolve) => {
        db.run("PRAGMA foreign_keys = ON", (err) => {
            if (!err) {
                resolve();
            }
        });
    });
}
exports.enableForeignKeys = enableForeignKeys;
//# sourceMappingURL=SqliteTypeUtils.js.map
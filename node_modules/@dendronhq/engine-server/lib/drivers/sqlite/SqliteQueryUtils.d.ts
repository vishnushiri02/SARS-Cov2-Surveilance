import { DLogger, ResultAsync } from "@dendronhq/common-all";
import { Database } from "sqlite3";
import { SqliteError } from "./SqliteError";
/**
 * Static Utils that help run sqlite database queries. Instead of taking
 * callbacks like the sqlite3 library, these methods will return an awaitable
 * ResultAsync and package Sqlite query errors into a SqliteError object.
 */
export declare class SqliteQueryUtils {
    static run(db: Database, sql: string, logger?: DLogger): ResultAsync<null, SqliteError>;
    /**
     * Runs Database.get() method of sqlite3 and packages the result (first row)
     * in an awaitable ResultAsync
     * @param db
     * @param sql
     * @param logger
     * @returns
     */
    static get<T = any>(db: Database, sql: string, logger?: DLogger): ResultAsync<T, SqliteError>;
    /**
     * Runs Database.all() method of sqlite3 and packages the result (array of
     * rows) in an awaitable ResultAsync
     * @param db
     * @param sql
     * @param logger
     * @returns
     */
    static all<T = any>(db: Database, sql: string, logger?: DLogger): ResultAsync<T[], SqliteError>;
    private static getSqliteError;
    private static formatQueryString;
}

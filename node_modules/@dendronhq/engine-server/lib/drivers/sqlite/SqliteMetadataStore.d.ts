import { DLogger, DVault, FindNoteOpts, IDataStore, IDendronError, IFileStore, NotePropsMeta, QueryNotesOpts, RespV3, StatusCodes, ResultAsync } from "@dendronhq/common-all";
import { Database } from "sqlite3";
export declare class SqliteMetadataStore implements IDataStore<string, NotePropsMeta> {
    private _db;
    private _vaults;
    constructor(_db: Database, _vaults: DVault[]);
    /**
     * Goes through all domains and recursively apply schemas.
     */
    initSchema(fileStore: IFileStore, wsRoot: string, logger: DLogger): Promise<import("@dendronhq/common-all").SchemaModuleDict>;
    dispose(): void;
    get(key: string): Promise<RespV3<NotePropsMeta>>;
    private _get;
    find(opts: FindNoteOpts): Promise<RespV3<NotePropsMeta[]>>;
    write(key: string, data: NotePropsMeta): Promise<RespV3<string>>;
    delete(key: string): Promise<RespV3<string>>;
    query(opts: QueryNotesOpts): ResultAsync<NotePropsMeta[], IDendronError<StatusCodes | undefined>>;
}

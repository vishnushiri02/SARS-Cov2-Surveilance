import { DNoteRefLink, DVault, IDendronError, NoteProps, NotePropsMeta, ReducedDEngine } from "@dendronhq/common-all";
import { WikiLinkNoteV4 } from "../types";
import { DecorationTaskNote } from "./taskNotes";
import { Decoration, DECORATION_TYPES, Decorator } from "./utils";
export declare type DecorationWikilink = WikiLinkDecorator | NoteRefDecorator;
export declare type WikiLinkDecorator = Decoration & {
    type: DECORATION_TYPES.wikiLink | DECORATION_TYPES.brokenWikilink;
};
export declare type NoteRefDecorator = Required<Decoration<{
    link: DNoteRefLink;
    noteMeta?: NotePropsMeta;
}>> & {
    type: DECORATION_TYPES.noteRef | DECORATION_TYPES.brokenNoteRef;
};
export declare type DecorationAlias = Decoration & {
    type: DECORATION_TYPES.alias;
};
declare type DecorationsForDecorateWikilink = DecorationWikilink | DecorationAlias | DecorationTaskNote;
export declare const decorateWikilink: Decorator<WikiLinkNoteV4, DecorationsForDecorateWikilink>;
export declare function linkedNoteType({ fname, anchorStart, anchorEnd, vaultName, note, engine, vaults, }: {
    fname?: string;
    anchorStart?: string;
    anchorEnd?: string;
    vaultName?: string;
    note?: NoteProps;
    engine: ReducedDEngine;
    vaults: DVault[];
}): Promise<{
    type: DECORATION_TYPES.brokenWikilink | DECORATION_TYPES.wikiLink;
    noteMeta?: NotePropsMeta;
    errors: IDendronError[];
}>;
export {};

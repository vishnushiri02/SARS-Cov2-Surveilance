import { Conflict, DPod, NoteProps, PodConflictResolveOpts } from "@dendronhq/common-all";
export interface PodClassEntryV4 {
    id: string;
    description: string;
    kind: PodKind;
    new (): DPod<any>;
}
export declare type PodItemV4 = {
    id: string;
    description: string;
    podClass: PodClassEntryV4;
};
export declare type PodKind = "import" | "export" | "publish";
export declare type GDocUtilMethods = {
    showInputBox: (arg0: any, arg1?: string) => Promise<string | undefined>;
    openFileInEditor: (arg0: NoteProps) => Promise<void>;
    showDocumentQuickPick: (arg0: string[]) => Promise<{
        label: string;
    } | undefined>;
    getGlobalState: (arg0: any) => Promise<string | undefined> | undefined;
    updateGlobalState: (arg0: any) => Promise<void>;
};
export declare type NotionUtilMethods = {
    getSelectionFromQuickpick: (arg0: string[]) => Promise<string | undefined>;
    withProgressOpts: any;
};
export declare type GithubIssueUtilMethods = {
    showMessage: ShowMessageTypes;
};
export declare type ShowMessageTypes = {
    info: (message: string) => void;
    warning: (message: string) => void;
};
export declare type ConflictHandler = {
    handleConflict: (conflict: Conflict, conflictResolveOpts: PodConflictResolveOpts) => Promise<string | undefined>;
};

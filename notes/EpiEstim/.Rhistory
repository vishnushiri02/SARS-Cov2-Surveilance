plot(r_uncertain_si)
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "G" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50))
res_si_from_data <- estimate_R(Flu2009$incidence,
method = "si_from_data",
si_data = Flu2009$si_data,
config = config)
plot(res_si_from_data, legend = FALSE)
?nrow
?seq
seq(2,8)
seq(2,8,0.5)
T <- nrow(Flu2009$incidence)
t_start <- seq(2, T-6) # starting at 2 as conditional on the past observations
t_end <- t_start + 6 # adding 6 to get 7-day windows as bounds included in window
res_weekly <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_weekly, "all")
res_weekly
T<-32
t_s<-seq(2,T-6)
t_s
t_end<-t_s+6
t_end
t_start <- seq(2, 32-13)
t_start
t_start+13
t_start <- seq(2, T-13) # starting at 2 as conditional on the past observations
## 2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19
t_end <- t_start + 13
##15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
res_biweekly <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_biweekly, "all")
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all")+ geom_hline(aes(yintercept=1,color="red",lty=2))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all")
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all")+geom_hline(aes(yintercept=1,color="red",lty=2))
?geom_hline
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all")+geom_hline(yintercept=1,aes(color="red",lty=2))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all") + geom_hline(aes(yintercept=1,color="red",lty=2))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all") + geom_hline(aes(yintercept=1,color="red"))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"all") + geom_hline(aes(yintercept=1))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"R") + geom_hline(aes(yintercept=1))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"R") + geom_hline(aes(yintercept=1,color="red",lty=2))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"R") + geom_hline(aes(yintercept=1,color="red", lty= 2))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"R") + geom_hline(aes(yintercept=1),color="red", lty= 2))
t_start <- c(2, 18, 25) # starting at 2 as conditional on the past observations
t_end <- c(17, 24, 32)
res_before_during_after_closure <- estimate_R(Flu2009$incidence,
method="parametric_si",
config = make_config(list(
t_start = t_start,
t_end = t_end,
mean_si = 2.6,
std_si = 1.5))
)
plot(res_before_during_after_closure,"R") + geom_hline(aes(yintercept=1),color="red", lty= 2)
config <- make_config(list(mean_si = 2.6, std_si = 1.5))
res_incid_vector <- estimate_R(Flu2009$incidence$I,
method="parametric_si",
config = config)
plot(res_incid_vector,"all")
t_start=seq(2,32-13)
t_end=t_start+13
config <- make_config(list(t_start=t_start,t_end=t_end,mean_si = 2.6, std_si = 1.5))
res_incid_vector <- estimate_R(Flu2009$incidence$I,
method="parametric_si",
config = config)
plot(res_incid_vector,"all")
config <- make_config(list(mean_si = 2.6, std_si = 1.5))
res_incid_vector <- estimate_R(Flu2009$incidence$I,
method="parametric_si",
config = config)
plot(res_incid_vector,"all")
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
dates_onset
l<-list(1,2,3,4,7,5)
l
typeof(l)
ul<-unlist(l)
ul
seq_len(32)
first<-seq_len(32)
lapply(list, function)
Flu2009$incidence$I[1]
unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))
function(i)
+     rep(i, Flu2009$incidence$I[i])
(32,function(i),rep(i,Flu2009$incidence$I[i]))
(32,function(i) rep(i,Flu2009$incidence$I[i]))
rep(i,Flu2009$incidence$I[i]
jj
lapply(seq_len(nrow(Flu2009$incidence)), function(i)
+     rep(i, Flu2009$incidence$I[i]))
T
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
incidence(dates_onset,Flu2009$incidence$date[T])
?incidence
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
plot(res_incid_class,"all")
estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
location <- sample(c("local","imported"), length(dates_onset), replace=TRUE)
location
typeof(location)
typeof(location[1])
typeof(location)
location <- sample(c("local","imported"), length(dates_onset), replace=TRUE) #Randomply assigning each cases on each day as locaal or imported.
location[1]<- "imported" #Forcing the first case to be imported
incid<-incidence(dates_onset,groups = location)
plot(incid)
res_with_imports <- estimate_R(incid,method="parametric_si", config = make_config(list(
mean_si = 2.6, std_si = 1.5)))
plot(res_with_imports, add_imported_cases=TRUE)
n_mcmc_samples <- config$n1*mcmc_control$thin
SI_fit <- coarseDataTools::dic.fit.mcmc(dat = Flu2009$si_data,
dist = dist,
init.pars = init_mcmc_params(Flu2009$si_data, dist),
burnin = mcmc_control$burnin,
n.samples = n_mcmc_samples,
seed = mcmc_control$seed)
mcmc_control$thin
config$n1
plot(SI_fit)
SI_fit
?coarse2estim()
library(EpiEstim)
library(ggplot2)
load(file='Flu2009.rda')
##incidence
Flu2009$incidence
##Serial interval distribution
Flu2009$si_distr
## serial interval data
## EL/ER show the lower/upper bound of the symptoms onset date in the infector
## SL/SR show the same for the secondary case
## type has entries 0 corresponding to doubly interval-censored data
Flu2009$si_data
library(incidence)
plot(as.incidence(Flu2009$incidence$I, dates = Flu2009$incidence$dates))
r_parametric_si<-estimate_R(Flu2009$incidence,method="parametric_si",config = make_config(list(mean_si=2.6,std_si=1.5)))
r_parametric_si
plot(r_parametric_si,legend = FALSE)
r_non_parametric_si <-estimate_R(Flu2009$incidence,method = "non_parametric_si", config = make_config(list(si_distr=Flu2009$si_distr)))
plot(r_non_parametric_si,"all")
config <- make_config(list(mean_si = 2.6, std_mean_si = 1,
min_mean_si = 1, max_mean_si = 4.2,
std_si = 1.5, std_std_si = 0.5,
min_std_si = 0.5, max_std_si = 2.5))
r_uncertain_si<- estimate_R(Flu2009$incidence, method = "uncertain_si", config = config)
si_sample <- coarse2estim(SI_fit, thin = mcmc_control$thin)$si_sample
res_si_from_sample <- estimate_R(Flu2009$incidence,
method = "si_from_sample",
si_sample = si_sample,
config = make_config(list(n2 = 50,
seed = overall_seed)))
?make_mcmc_control()
mcmc_control$thin
unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))
Flu2009$incidence$dates[6]
Flu2009$incidence$I
Flu2009$incidence$dates
Flu2009$incidence$dates[4]
?unlist
typeof(Flu2009$incidence$dates)
Flu2009$incidence
Flu2009$si_data
?make_mcmc_control
help(MCMCpack)
??MCMCpack
?MCMCmetrop1R
mcmc_control
config
res_si_from_data
?estimate.R
?load
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009"")
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009")
load(/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu<-load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu<-load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
data(Flu)
Flu
Flu<-load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu
Flu<-load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu$i
Flu<-load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu$I
data(Flu2009)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
GT<-Flu2009$si_distr
r_TD<-est.R0.TD(Flu2009$incidence,GT)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
GT<-Flu2009$si_distr
r_TD<-est.R0.TD(Flu2009$incidence,GT)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
r_TD<-est.R0.TD(Flu2009$incidence,Flu2009$si_distr)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
est.R0.TD(Flu2009$incidence)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
check.incid(Flu2009$incidence)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
check.incid(Flu2009$I,Flu2009$t)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
#check.incid(Flu2009$I,Flu2009$t)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
check.incid(Flu2009$incidence$I,Flu2009$incidence$dates)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
epid<-check.incid(Flu2009$incidence$I,Flu2009$incidence$dates)
est.R0.TD(epid,Flu2009$si_distr)
res_with_imports <- estimate_R(incid,method="parametric_si", config = make_config(list(
mean_si = 2.6, std_si = 1.5)))
library(EpiEstim)
library(ggplot2)
load(file='Flu2009.rda')
res_with_imports <- estimate_R(incid,method="parametric_si", config = make_config(list(
mean_si = 2.6, std_si = 1.5)))
plot(res_with_imports, add_imported_cases=TRUE)
Flu2009$si_data$ER
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
Flu2009
epidemic<-check.incid(Flu2009$incidence$I,Flu2009$incidence$dates)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
egt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
est.R0.TD(epidemic,egt)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
egt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt$GT
est.R0.TD(epidemic,egt)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
egt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt$GT
est.R0.TD(epidemic,egt$GT)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
egt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt<-generation.time("weibull",c(4.37,1.90))
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt<-generation.time("weibull",c(4.37,1.90))
est.R0.TD(epidemic,egt)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt<-generation.time("weibull",c(4.37,1.90))
typeof(egt)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt<-generation.time("weibull",c(4.37,1.90))
typeof(epidemic)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
#Flu2009
epidemic<-check.incid(Flu2009$incidence$I,Flu2009$incidence$dates)
epidemic
Germany.1918
install.packages("R0")
library(R0)
install.packages("R0")
#data() - This lists the available data sets. I am choosing the Germany.1918 data set.
ed<-data("Germany.1918") #Loads the data
Germany.1918
incidence<-unname(Germany.1918)
dates<-names(Germany.1918)
input_incidence<-check.incid(incidence,t=dates)
input_incidence
check.incid(incidence,date.first.obs ="1918-09-29",time.step = 1 )
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
#Flu2009
epidemic<-Flu2009$incidence$I
names(epidemic)<-Flu2009$incidence$dates
epidemic
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
egt<-generation.time("weibull",c(4.37,1.90))
est.R0.TD(epidemic,egt)
library(EpiEstim)
library(ggplot2)
load(file='Flu2009.rda')
wallinga_teunis(Flu2009$incidence$dates, method = "parametric_si",config = list(mean_si=4.37,std_si= 1.90))
wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(mean_si=4.37,std_si= 1.90))
wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
plot(r_wt)
r-td<-est.R0.TD(epidemic,egt)
r_td<-est.R0.TD(epidemic,egt)
plot(r_td)
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
plot(r_wt)
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
plot(r_wt,"R")
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
plot(r_wt,"all")
r_td<-est.R0.TD(epidemic,egt)
smooth.Rt(r_td,7)
plot(r_td)
r_td<-est.R0.TD(epidemic,egt)
plot(smooth.Rt(r_td,7))
r_td<-est.R0.TD(epidemic,egt)
smooth.Rt(r_td,7)
r_td<-est.R0.TD(epidemic,egt,nsim=10000)
smooth.Rt(r_td,7)
library(EpiEstim)
library(ggplot2)
load(file='Flu2009.rda')
##incidence
Flu2009$incidence
##Serial interval distribution
Flu2009$si_distr
## serial interval data
## EL/ER show the lower/upper bound of the symptoms onset date in the infector
## SL/SR show the same for the secondary case
## type has entries 0 corresponding to doubly interval-censored data
Flu2009$si_data
r_td<-est.R0.TD(epidemic,egt,begin=1,end=32, nsim=10000)
smooth.Rt(r_td,7)
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
smooth.Rt(r_td,7)
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
plot(smooth.Rt(r_td,7))
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
plot(r_td)

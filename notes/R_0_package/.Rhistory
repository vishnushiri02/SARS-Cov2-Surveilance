install.packages("R0")
library(R0)
install.packages("R0")
Germany.1918
data(Germany.1918)
install.packages("R0")
library(R0)
data(Germany.1918)
Germany.1918
Germany.1918[1]
typeof(Germany.1918)
try<- c("vishnu"=29,"sathwik"=30)
try
try[1]
?data
data()
#data() - This lists the available data sets. I am choosing the Germany.1918 data set.
ed<-data("Germany.1918") #Loads the data
ed
#data() - This lists the available data sets. I am choosing the Germany.1918 data set.
ed<-data("Germany.1918") #Loads the data
Germany.1918
ed["1918-09-29"]
ed[1918-09-29]
try["vishnu"]
try["sathwik"]
Germany.1918["1919-02-01"]
Germany.1918["1918-09-29"]
?lm
Germany.1918[["1918-09-29"]]
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Gremany.1918[["1918-09-29"]]
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Germany.1918[["1918-09-29"]]
?unname
?unvalue
namedlist[try]
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Germany.1918[["1918-09-29"]]
Germany.1918[[]]
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Germany.1918[["1918-09-29"]]
names(Germany.1918)
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Germany.1918[["1918-09-29"]]
unname(Germany.1918)
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Germany.1918[["1918-09-29"]]
unname(Germany.1918)
name(Germany.1918)
Germany.1918["1918-09-29"]
unname(Germany.1918["1918-09-29"])
Germany.1918[["1918-09-29"]]
unname(Germany.1918)
names(Germany.1918)
incid<-unname(Germany.1918)
dates<-names(Germany.1918)
incid
dates
incid<-unname(Germany.1918)
dates<-names(Germany.1918)
check.incid(incid,t=dates)
incid<-unname(Germany.1918)
dates<-names(Germany.1918)
input_incidence<-check.incid(incid,t=dates)
input_incidence$t
input_incidence$incid
incidence<-unname(Germany.1918)
dates<-names(Germany.1918)
input_incidence<-check.incid(incidence,t=dates)
check.incid(incidence,date.first.obs ="1918-09-29",time.step = 1 )
? epi.curve
Epicurve.dates
H1N1.serial.interval
Germany.1918
load(H1N1.serial.interval)
H1N1.serial.interval
GT.chld.hsld
Germany.1918
data(Germany.1918)
data("H1N1.serial.interval")
H1N1.serial.interval
data(GT.chld.hsld)
GT.chld.hsld
si_data<-data("H1N1.serial.interval")
est.GT(serial.interval = si_data, request.plot = TRUE)
si_data
data("H1N1.serial.interval")
est.GT(serial.interval =H1N1.serial.interval, request.plot = TRUE)
rep(0,length(H1N1.serial.interval)
?rep
rep(0,length(H1N1.serial.interval))
est.GT(infector.onset.dates=rep(0,length(H1N1.serial.interval)),
infectee.onset.dates=H1N1.serial.interval)
Germany.1918
?generation.time
data("Germany.1918")
mGT<-generation.time("gamma",c(3,1.5))
est.R0.EG(Germany.1918,mGT,begin = 1, end=30)
data("Germany.1918")
mGT<-generation.time("gamma",c(3,1.5))
est.R0.EG(Germany.1918,mGT,begin = 1, end=27)
data("Germany.1918")
mGT<-generation.time("gamma",c(3,1.5))
res<-est.R0.EG(Germany.1918,mGT,begin = 1, end=27)
plot(res)
data("Germany.1918")
mGT<-generation.time("gamma",c(3,1.5))
res<-est.R0.EG(Germany.1918,mGT,begin = 1, end=27)
res
plot(res)
incidence<-unname(Germany.1918)
dates<-names(Germany.1918)
input_incidence<-check.incid(incidence,t=dates)
incidence<-unname(Germany.1918)
dates<-names(Germany.1918)
input_incidence<-check.incid(incidence,t=dates)
input_incidence
check.incid(incidence,date.first.obs ="1918-09-29",time.step = 1 )
incidence<-unname(Germany.1918)
dates<-names(Germany.1918)
input_incidence<-check.incid(incidence,t=dates)
input_incidence
typeof(input_incidence$incid)
typeof(input_incidence$t)
data("H1N1.serial.interval")
est.GT(serial.interval =H1N1.serial.interval, request.plot = TRUE)
H1N1.serial.interval
?est.GT
ar_r0<-est.R0.AR(AR=0.30)
ar_r0
ar_r0<-est.R0.AR(AR=0.30)
ar_r0$AR
ar_r0$epid
ar_r0$var
ar_r0<-est.R0.AR(AR=0.30)
ar_r0
est.R0.AR(AR=0.30)
est.R0.AR(pop.size = 1732, incid = 519)
data("Germany.1918")
mGT<-generation.time("gamma",c(3,1.5))
res<-est.R0.EG(Germany.1918,mGT,begin = 1, end=27)
res
data("Germany.1918")
mGT<-generation.time("gamma",c(3,1.5))
res<-est.R0.EG(Germany.1918,mGT,begin = 1, end=27)
res
res$pred
res$r
data("Germany.1918")
est.R0.ML(Germany.1918,unknown.GT = TRUE,begin=1,end=27,range = c(0.01,50))
data("Germany.1918")
GT<-c(2.45,1.38)
est.R0.ML(Germany.1918,GT,unknown.GT = TRUE,begin=1,end=27,range = c(0.01,50))
data("Germany.1918")
GT<-generation.time(2.45,1.38)
data("Germany.1918")
GT<-generation.time(type=Null, c(2.45,1.38))
data("Germany.1918")
GT<-generation.time(Null)
data("Germany.1918")
GT<-generation.time("Null")
data("Germany.1918")
GT<-generation.time("gamma")
data("Germany.1918")
GT<-generation.time("gamma",c(2.45, 1.38))
est.R0.ML(Germany.1918,GT,begin=1,end=27,range = c(0.01,50))
GT<-generation.time("gamma",c(2.45, 1.38))
est.R0.SB(Germany.1918,GT)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
r_sb$proba.Rt
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
r_sb$proba.Rt
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
r_sb$Rt.quant
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
r_sb$quant
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
plot(r_sb)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
plot(r_sb)
plotfit(r_sb)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
#plot(r_sb)
plotfit(r_sb)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
plot(r_sb)
#plotfit(r_sb)
GT<-generation.time("gamma",c(2.45, 1.38))
r_sb<-est.R0.SB(Germany.1918,GT)
plot(r_sb)
#plotfit(r_sb)
mGT<-generation.time("gamma",c(3,1.5))
TD<- est.R0.TD(Germany.1918,mGT,begin = 1, end = 126,nsim = 100)
mGT<-generation.time("gamma",c(3,1.5))
TD<- est.R0.TD(Germany.1918,mGT,begin = 1, end = 126,nsim = 100)
TD
mGT<-generation.time("gamma",c(3,1.5))
TD<- est.R0.TD(Germany.1918,mGT,begin = 1, end = 126,nsim = 100)
TD
smooth.Rt(TD,7)
mGT<-generation.time("gamma",c(3,1.5))
TD<- est.R0.TD(Germany.1918,mGT,begin = 1, end = 126,nsim = 100)
TD
plot(smooth.Rt(TD,7))
mGT<-generation.time("gamma",c(3,1.5))
TD<- est.R0.TD(Germany.1918,mGT,begin = 1, end = 126,nsim = 100)
plot(TD)
plot(smooth.Rt(TD,7))
estR0<-estimate.R(Germany.1918,mGT,begin = 1, end = 27, methods = c("EG","ML","TD","AR","SB"),pop.size = 100000, nsim=100)
estR0
?as.incidence
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
#Flu2009
epidemic<-Flu2009$incidence$I
names(epidemic)<-Flu2009$incidence$dates
epidemic
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
fgt
egt<-generation.time("weibull",c(4.37,1.90)) # the parameters and the type of the distribution is based on est.GT output
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
plot(r_td)
?incidence
library(EpiEstim)
library(ggplot2)
load(file='Flu2009.rda')
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
config <- make_config(list(mean_si = 2.6, std_si = 1.5))
res_incid_vector <- estimate_R(Flu2009$incidence$I,
method="parametric_si",
config = config)
plot(res_incid_vector,"all")
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
library(incidence)
plot(as.incidence(Flu2009$incidence$I, dates = Flu2009$incidence$dates))
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
plot(res_incid_class,"all")
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
?incidence
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
plot(res_incid_class,"all")
T <- nrow(Flu2009$incidence)
dates_onset <- Flu2009$incidence$dates[unlist(lapply(seq_len(nrow(Flu2009$incidence)), function(i)
rep(i, Flu2009$incidence$I[i])))]
last_date <- Flu2009$incidence$date[T]
incidence(dates_onset, last_date = last_date)
res_incid_class <- estimate_R(incidence(dates_onset, last_date = last_date),
method="parametric_si",
config = config)
plot(res_incid_class,"all")
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
%plot(r_td)
library(R0)
load("/Users/vishnushirishyamsaisundar/Documents/Master-Thesis/Growth_rate_estimation/notes/EpiEstim/Flu2009.rda")
#Flu2009
epidemic<-Flu2009$incidence$I
names(epidemic)<-Flu2009$incidence$dates
epidemic
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
fgt
egt<-generation.time("weibull",c(4.37,1.90)) # the parameters and the type of the distribution is based on est.GT output
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
%plot(r_td)
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
#plot(r_td)
plot(smooth.Rt(r_td))
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
#plot(r_td)
plot(smooth.Rt(r_td,7))
library(EpiEstim)
library(ggplot2)
load(file='Flu2009.rda')
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000,thin)
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "G" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50))
res_si_from_data <- estimate_R(Flu2009$incidence,
method = "si_from_data",
si_data = Flu2009$si_data,
config = config)
plot(res_si_from_data, legend = FALSE)
res_si_from_data
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "W" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50))
res_si_from_data <- estimate_R(Flu2009$incidence,
method = "si_from_data",
si_data = Flu2009$si_data,
config = config)
plot(res_si_from_data, legend = FALSE)
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "G" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50))
res_si_from_data <- estimate_R(Flu2009$incidence,
method = "si_from_data",
si_data = Flu2009$si_data,
config = config)
plot(res_si_from_data, legend = FALSE)
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "W" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50,t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "W" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50,t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = config)
plot(r_wt,"all")
MCMC_seed <- 1
overall_seed <- 2
mcmc_control <- make_mcmc_control(seed = MCMC_seed,
burnin = 1000)
dist <- "W" # fitting a Gamma dsitribution for the SI
config <- make_config(list(si_parametric_distr = dist,
mcmc_control = mcmc_control,
seed = overall_seed,
n1 = 50,
n2 = 50,t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "si_from_data",si_data=Flu2009$si_data,config = config)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
gt<-generation.time("gamma",Flu2009$incidence$I)
#fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
#fgt
egt<-generation.time("weibull",c(4.37,1.90)) # the parameters and the type of the distribution is based on est.GT output
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
gt<-generation.time("gamma",Flu2009$incidence$I)
gt
#fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
#fgt
egt<-generation.time("weibull",c(4.37,1.90)) # the parameters and the type of the distribution is based on est.GT output
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
gt<-generation.time("gamma",Flu2009$si_distr)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
gt<-generation.time("gamma",Flu2009$si_distr)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
gt<-generation.time("gamma",Flu2009$si_distr,mean=4.37,sd=1.90)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
gt<-generation.time("gamma")
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
gt<-generation.time("gamma",c(4.37,1.90)
gt
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
gt<-generation.time("gamma",c(4.37,1.90))
gt
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset,gt)
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
plot(r_wt,"all")
n_mcmc_samples <- config$n1*mcmc_control$thin #config$n1 - 500, mcmc_control$thin - 10
SI_fit <- coarseDataTools::dic.fit.mcmc(dat = Flu2009$si_data,
dist = dist,
init.pars = init_mcmc_params(Flu2009$si_data, dist),
burnin = mcmc_control$burnin,
n.samples = n_mcmc_samples,
seed = mcmc_control$seed) #the function fits the distribution to the input data using MCMC
SI_fit
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000, si_sample=SI_fit))
plot(r_wt,"all")
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000, si_sample=SI_fit))
plot(r_wt,"all")
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),mean_si = 4.37, std_si = 1.90,
n_sim = 10000))
plot(r_wt,"all")
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32)
n_sim = 10000, si_sample=SI_fit))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000, si_sample=SI_fit))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "non_parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000, si_sample=SI_fit))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "non_parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000, si_distr=SI_fit))
check_si_distr(SI_fit)
r_wt<-wallinga_teunis(Flu2009$incidence, method = "non_parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000, si_distr=Flu2009$si_distr))
plot(r_wt,"all")
r_wt
si_sample <- coarse2estim(SI_fit, thin = mcmc_control$thin)$si_sample
si_sample
res_si_from_sample <- estimate_R(Flu2009$incidence,
method = "si_from_sample",
si_sample = si_sample,
config = make_config(list(n2 = 50,
seed = overall_seed)))
si_sample <- coarse2estim(SI_fit, thin = mcmc_control$thin)$si_sample
#si_sample
res_si_from_sample <- estimate_R(Flu2009$incidence,
method = "si_from_sample",
si_sample = si_sample,
config = make_config(list(n2 = 50,
seed = overall_seed)))
discr_si(SI_fit)
SI_fit
r_wt<-wallinga_teunis(Flu2009$incidence, method = "non_parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000, si_distr=si_sample))
discr_si(si_sample)
discr_si(si_sample)
r_wt<-wallinga_teunis(Flu2009$incidence, method = "non_parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000))
r_wt<-wallinga_teunis(Flu2009$incidence, method = "non_parametric_si",config = list(t_start = seq(2, 26), t_end = seq(8, 32),
n_sim = 10000,si_distr=Flu2009$si_distr))
plot(r_wt,"all")
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset,gt)
pri_onset<-Flu2009$si_data$ER
seco_onset<-Flu2009$si_data$SR
Flu2009$si_distr
fgt<-est.GT(infector.onset.dates = pri_onset, infectee.onset.dates = seco_onset)
fgt
egt<-generation.time("weibull",c(4.37,1.90)) # the parameters and the type of the distribution is based on est.GT output
r_td<-est.R0.TD(epidemic,egt,begin="2009-04-27",end="2009-05-28",nsim=10000)
#plot(r_td)
plot(smooth.Rt(r_td,7))
